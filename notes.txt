
Java OOP -OOP stands for Object-Oriented Programming
- Inheritance, Polymorphism, Encapsulation, Abstraction

Inheritance - In Java, it is possible to inherit attributes and methods from one class to another. We group the "inheritance concept" into two categories:

              subclass (child) - the class that inherits from another class
              superclass (parent) - the class being inherited from
              To inherit from a class, use the extends keyword.


 Polymorphism - Has Overloading and overriding
                Overlaoding - We have multiple methods with same name but different arguments/parameters

                OverRiding - In Java, method overriding occurs when a subclass (child class) has the same method
                as the parent class. In other words, method overriding occurs when a subclass provides a particular
                implementation of a method declared by one of its parent classes
                - Same method name in Parent and child class with same arguments/parameters but different body


  Encapsulation - We have 4 different types of Access modifier in Java
                1. Public, Private, Protected, default


  Abstraction - Another way to achieve abstraction in Java, is with interfaces.

  Interface -  An interface is a completely "abstract class" that is used to group related methods with empty bodies:

  Constructor - A constructor in Java is a special method that is used to initialize objects.
  The constructor is called when an object of a class is created.
  It can be used to set initial values for object attributes:

  HashMap - In the ArrayList chapter, you learned that Arrays store items as an ordered collection,
   and you have to access them with an index number (int type).
   A HashMap however, store items in "key/value" pairs, and you can access them by an index of
   another type (e.g. a String).

   One object is used as a key (index) to another object (value). It can store different types: String keys and
   Integer values, or the same type, like: String keys and String values:

